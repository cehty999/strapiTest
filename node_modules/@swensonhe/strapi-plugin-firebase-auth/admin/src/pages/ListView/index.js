"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var react_intl_1 = require("react-intl");
var get_1 = __importDefault(require("lodash/get"));
var helper_plugin_1 = require("@strapi/helper-plugin");
var design_system_1 = require("@strapi/design-system");
var design_system_2 = require("@strapi/design-system");
var design_system_3 = require("@strapi/design-system");
var design_system_4 = require("@strapi/design-system");
var icons_1 = require("@strapi/icons");
var icons_2 = require("@strapi/icons");
var react_router_dom_1 = require("react-router-dom");
var FirebaseTable_1 = require("../../components/DynamicTable/FirebaseTable");
var api_1 = require("../HomePage/utils/api");
var PaginationFooter_1 = require("./PaginationFooter");
var SearchURLQuery_1 = __importDefault(require("../../components/SearchURLQuery/SearchURLQuery"));
var match_sorter_1 = require("match-sorter");
var DeleteAccount_1 = require("../../components/UserManagement/DeleteAccount");
var ResetPassword_1 = require("../../components/UserManagement/ResetPassword");
function ListView(_a) {
    var _this = this;
    var _b;
    var data = _a.data, meta = _a.meta;
    var _c = __read((0, react_1.useState)({
        isOpen: false,
        email: "",
        id: "",
    }), 2), showResetPasswordDialogue = _c[0], setShowResetPasswordDialogue = _c[1];
    var _d = __read((0, react_1.useState)({
        isOpen: false,
        email: "",
        id: "",
    }), 2), showDeleteAccountDialogue = _d[0], setShowDeleteAccountDialogue = _d[1];
    var _e = __read((0, react_1.useState)(data), 2), rowsData = _e[0], setRowsData = _e[1];
    var _f = __read((0, react_1.useState)(meta), 2), rowsMeta = _f[0], setRowsMeta = _f[1];
    var _g = __read((0, react_1.useState)(false), 2), isLoading = _g[0], setIsLoading = _g[1];
    var headerLayoutTitle = "Firebase Users";
    var _h = __read((0, helper_plugin_1.useQueryParams)(), 1), query = _h[0];
    var _j = (0, react_router_dom_1.useHistory)(), push = _j.push, pathname = _j.location.pathname;
    var toggleNotification = (0, helper_plugin_1.useNotification)();
    (0, helper_plugin_1.useFocusWhenNavigate)();
    var setNextPageToken = function (page, nextPageToken) {
        var formattedPage = parseInt(page) || 1;
        var storeObject = localStorage.getItem("nextPageTokens");
        var newObject = {};
        if (storeObject) {
            newObject = JSON.parse(storeObject);
        }
        newObject[formattedPage + 1] = nextPageToken;
        localStorage.setItem("nextPageTokens", JSON.stringify(newObject));
    };
    var getNextPageToken = function (page) { return __awaiter(_this, void 0, void 0, function () {
        var formattedPage, storeObject, newObject;
        return __generator(this, function (_a) {
            formattedPage = parseInt(page);
            storeObject = localStorage.getItem("nextPageTokens");
            if (!storeObject) {
                return [2, undefined];
            }
            newObject = JSON.parse(storeObject);
            return [2, newObject[formattedPage]];
        });
    }); };
    var fetchPaginatedUsers = function () { return __awaiter(_this, void 0, void 0, function () {
        var nextPageToken, response;
        var _a, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0: return [4, getNextPageToken((_a = query.query) === null || _a === void 0 ? void 0 : _a.page)];
                case 1:
                    nextPageToken = _c.sent();
                    if (nextPageToken && (query === null || query === void 0 ? void 0 : query.query)) {
                        query.query.nextPageToken = nextPageToken;
                    }
                    return [4, (0, api_1.fetchUsers)(query.query)];
                case 2:
                    response = _c.sent();
                    if (response.pageToken) {
                        setNextPageToken((_b = query.query) === null || _b === void 0 ? void 0 : _b.page, response.pageToken);
                    }
                    return [2, response];
            }
        });
    }); };
    (0, react_1.useEffect)(function () {
        var fetchPaginatedData = function () { return __awaiter(_this, void 0, void 0, function () {
            var response, data_1, err_1;
            var _a, _b, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _d.trys.push([0, 2, , 3]);
                        setIsLoading(true);
                        return [4, fetchPaginatedUsers()];
                    case 1:
                        response = _d.sent();
                        data_1 = (_a = response.data) === null || _a === void 0 ? void 0 : _a.map(function (item) {
                            return __assign({ id: item.uid }, item);
                        });
                        if ((_b = query.query) === null || _b === void 0 ? void 0 : _b._q) {
                            data_1 = (0, match_sorter_1.matchSorter)(data_1, (_c = query.query) === null || _c === void 0 ? void 0 : _c._q, {
                                keys: ["email", "displayName", "username"],
                            });
                        }
                        setRowsData(data_1);
                        setRowsMeta(response.meta);
                        setIsLoading(false);
                        return [3, 3];
                    case 2:
                        err_1 = _d.sent();
                        setIsLoading(false);
                        return [3, 3];
                    case 3: return [2];
                }
            });
        }); };
        fetchPaginatedData();
    }, [query.query]);
    var formatMessage = (0, react_intl_1.useIntl)().formatMessage;
    var fetchData = function () { return __awaiter(_this, void 0, void 0, function () {
        var response, newData, err_2, errorMessage;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    setIsLoading(true);
                    return [4, fetchPaginatedUsers()];
                case 1:
                    response = _a.sent();
                    newData = response.data.map(function (item) {
                        return __assign({ id: item.uid }, item);
                    });
                    setRowsData(newData);
                    setRowsMeta(response.meta);
                    setIsLoading(false);
                    toggleNotification({
                        type: "success",
                        message: { id: "notification.success", defaultMessage: "Deleted" },
                    });
                    return [2, newData];
                case 2:
                    err_2 = _a.sent();
                    errorMessage = (0, get_1.default)(err_2, "response.payload.message", formatMessage({ id: "error.record.delete" }));
                    setIsLoading(false);
                    toggleNotification({
                        type: "warning",
                        message: errorMessage,
                    });
                    return [2, Promise.reject([])];
                case 3: return [2];
            }
        });
    }); };
    var handleDeleteAll = function (idsToDelete) { return __awaiter(_this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, Promise.all(idsToDelete.map(function (id) { return (0, api_1.deleteUser)(id, null); }))];
                case 1:
                    _a.sent();
                    fetchData();
                    return [2];
            }
        });
    }); };
    var handleDeleteRecord = function (idsToDelete, destination) { return __awaiter(_this, void 0, void 0, function () {
        var result;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, (0, api_1.deleteUser)(idsToDelete, destination)];
                case 1:
                    _a.sent();
                    return [4, fetchData()];
                case 2:
                    result = _a.sent();
                    return [2, result];
            }
        });
    }); };
    var handleConfirmDeleteData = function (idsToDelete, isStrapiIncluded, isFirebaseIncluded) { return __awaiter(_this, void 0, void 0, function () {
        var destination, result;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    destination = null;
                    if (isStrapiIncluded && isFirebaseIncluded) {
                        destination = null;
                    }
                    else if (isStrapiIncluded) {
                        destination = "strapi";
                    }
                    else if (isFirebaseIncluded)
                        destination = "firebase";
                    return [4, handleDeleteRecord(idsToDelete, destination)];
                case 1:
                    result = _a.sent();
                    return [2, result];
            }
        });
    }); };
    var getCreateAction = function () { return (react_1.default.createElement(design_system_3.Button, { onClick: function () {
            push({
                pathname: "".concat(pathname, "/users/create"),
                state: { from: pathname },
            });
        }, startIcon: react_1.default.createElement(icons_2.Plus, null) }, "Create")); };
    if (isLoading) {
        return react_1.default.createElement(helper_plugin_1.LoadingIndicatorPage, null);
    }
    var headSubtitle = "Showing ".concat((rowsData === null || rowsData === void 0 ? void 0 : rowsData.length) || 0, " entries");
    var handleCloseResetDialogue = function () {
        setShowResetPasswordDialogue({ isOpen: false, email: "", id: "" });
    };
    var handleCloseDeleteDialogoue = function () {
        setShowDeleteAccountDialogue({ isOpen: false, email: "", id: "" });
    };
    var resetPassword = function (newPassword) { return __awaiter(_this, void 0, void 0, function () {
        var err_3;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4, (0, api_1.resetUserPassword)(showResetPasswordDialogue.id, {
                            password: newPassword,
                        })];
                case 1:
                    _a.sent();
                    handleCloseResetDialogue();
                    toggleNotification({
                        type: "success",
                        message: {
                            id: "notification.success",
                            defaultMessage: "Saved",
                        },
                    });
                    return [3, 3];
                case 2:
                    err_3 = _a.sent();
                    toggleNotification({
                        type: "success",
                        message: {
                            id: "notification.error",
                            defaultMessage: "Error resetting password, please try again",
                        },
                    });
                    return [3, 3];
                case 3: return [2];
            }
        });
    }); };
    var deleteAccount = function (isStrapiIncluded, isFirebaseIncluded) { return __awaiter(_this, void 0, void 0, function () {
        var newRowsData;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, handleConfirmDeleteData(showDeleteAccountDialogue.id, isStrapiIncluded, isFirebaseIncluded)];
                case 1:
                    newRowsData = _a.sent();
                    handleCloseDeleteDialogoue();
                    setRowsData(newRowsData);
                    return [2];
            }
        });
    }); };
    return (react_1.default.createElement(design_system_1.Main, { "aria-busy": isLoading },
        react_1.default.createElement(design_system_2.HeaderLayout, { primaryAction: getCreateAction(), subtitle: headSubtitle, title: headerLayoutTitle, navigationAction: react_1.default.createElement(design_system_4.Link, { startIcon: react_1.default.createElement(icons_1.ArrowLeft, null), to: "/content-manager/" }, "Back") }),
        react_1.default.createElement(design_system_2.ActionLayout, { endActions: react_1.default.createElement(react_1.default.Fragment, null), startActions: react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(SearchURLQuery_1.default, { label: formatMessage({
                        id: "app.component.search.label",
                        defaultMessage: "Search for {target}",
                    }, { target: headerLayoutTitle }), placeholder: formatMessage({
                        id: "app.component.search.placeholder",
                        defaultMessage: "Search...",
                    }), trackedEvent: "didSearch" })) }),
        react_1.default.createElement(design_system_2.ContentLayout, null,
            react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement(ResetPassword_1.ResetPassword, { isOpen: showResetPasswordDialogue.isOpen, email: showResetPasswordDialogue.email, onClose: handleCloseResetDialogue, onConfirm: resetPassword }),
                react_1.default.createElement(DeleteAccount_1.DeleteAccount, { isOpen: showDeleteAccountDialogue.isOpen, email: showDeleteAccountDialogue.email, onToggleDialog: handleCloseDeleteDialogoue, onConfirm: deleteAccount, isSingleRecord: true }),
                react_1.default.createElement(FirebaseTable_1.FirebaseTable, { onConfirmDeleteAll: handleDeleteAll, isLoading: isLoading, rows: rowsData, action: getCreateAction(), onResetPasswordClick: function (_a) {
                        var email = _a.email, uid = _a.uid;
                        setShowResetPasswordDialogue({
                            isOpen: true,
                            email: email,
                            id: uid,
                        });
                    }, onDeleteAccountClick: function (_a) {
                        var email = _a.email, uid = _a.uid;
                        setShowDeleteAccountDialogue({
                            isOpen: true,
                            email: email,
                            id: uid,
                        });
                    } }),
                react_1.default.createElement(PaginationFooter_1.PaginationFooter, { pageCount: ((_b = rowsMeta === null || rowsMeta === void 0 ? void 0 : rowsMeta.pagination) === null || _b === void 0 ? void 0 : _b.pageCount) || 1 })))));
}
exports.default = (0, react_1.memo)(ListView);
//# sourceMappingURL=index.js.map