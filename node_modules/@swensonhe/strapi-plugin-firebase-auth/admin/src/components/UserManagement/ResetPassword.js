"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResetPassword = void 0;
var react_1 = __importStar(require("react"));
var design_system_1 = require("@strapi/design-system");
var design_system_2 = require("@strapi/design-system");
var ResetPassword = function (_a) {
    var isOpen = _a.isOpen, email = _a.email, onClose = _a.onClose, onConfirm = _a.onConfirm;
    var _b = __read((0, react_1.useState)(""), 2), newPassword = _b[0], setNewPassword = _b[1];
    var _c = __read((0, react_1.useState)(false), 2), isNewPasswordChange = _c[0], setIsNewPasswordChanged = _c[1];
    var resetState = function () {
        setNewPassword("");
        setIsNewPasswordChanged(false);
    };
    var handleClose = function () {
        resetState();
        onClose();
    };
    var handleConfirm = function () {
        resetState();
        onConfirm(newPassword);
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(design_system_1.Dialog, { onClose: handleClose, title: "Reset password", isOpen: isOpen },
            react_1.default.createElement(design_system_1.DialogBody, null,
                react_1.default.createElement(design_system_1.Flex, { direction: "column", alignItems: "center", gap: 2 },
                    react_1.default.createElement(design_system_1.Flex, { justifyContent: "flex-start" },
                        react_1.default.createElement(design_system_1.Typography, null, "Send a password reset email.")),
                    react_1.default.createElement(design_system_1.Flex, { justifyContent: "flex-start", marginTop: 2 },
                        react_1.default.createElement(design_system_1.Typography, { variant: "sigma" }, "User account")),
                    react_1.default.createElement(design_system_1.Flex, { justifyContent: "flex-start" },
                        react_1.default.createElement(design_system_1.Typography, null, email)),
                    react_1.default.createElement("div", { style: { marginTop: 10 } },
                        react_1.default.createElement(design_system_2.TextInput, { type: "password", label: "New password", "aria-label": "Password", value: newPassword, onChange: function (e) {
                                setIsNewPasswordChanged(true);
                                setNewPassword(e.target.value);
                            }, required: true, error: !isNewPasswordChange
                                ? ""
                                : !newPassword
                                    ? "Password is required"
                                    : newPassword.length < 6
                                        ? "Password must contain at least 6 characters"
                                        : "" })),
                    react_1.default.createElement("div", null))),
            react_1.default.createElement(design_system_1.DialogFooter, { startAction: react_1.default.createElement(design_system_1.Button, { onClick: handleClose, variant: "tertiary" }, "Cancel"), endAction: react_1.default.createElement(design_system_1.Button, { variant: "danger-light", disabled: newPassword === "" || newPassword.length < 6, onClick: handleConfirm }, "Reset password") }))));
};
exports.ResetPassword = ResetPassword;
//# sourceMappingURL=ResetPassword.js.map