"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = __importDefault(require("@strapi/utils"));
var ValidationError = utils_1.default.errors.ValidationError;
var STRAPI_DESTINATION = "strapi";
var FIREBASE_DESTINATION = "firebase";
exports.default = {
    list: function (ctx) { return __awaiter(void 0, void 0, void 0, function () {
        var _a, pagination, nextPageToken, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    _a = ctx.query, pagination = _a.pagination, nextPageToken = _a.nextPageToken;
                    if (!pagination) {
                        pagination = {};
                        pagination.page = 1;
                        pagination.pageSize = 10;
                    }
                    _b = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .list(pagination, nextPageToken)];
                case 1:
                    _b.body = _c.sent();
                    return [2];
            }
        });
    }); },
    create: function (ctx) { return __awaiter(void 0, void 0, void 0, function () {
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _a = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .create(ctx.request.body)];
                case 1:
                    _a.body = _b.sent();
                    return [2];
            }
        });
    }); },
    get: function (ctx) { return __awaiter(void 0, void 0, void 0, function () {
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _a = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .get(ctx.params.id)];
                case 1:
                    _a.body = _b.sent();
                    return [2];
            }
        });
    }); },
    update: function (ctx) { return __awaiter(void 0, void 0, void 0, function () {
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _a = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .update(ctx.params.id, ctx.request.body)];
                case 1:
                    _a.body = _b.sent();
                    return [2];
            }
        });
    }); },
    delete: function (ctx) { return __awaiter(void 0, void 0, void 0, function () {
        var destination, _a, _b, _c, _d;
        return __generator(this, function (_e) {
            switch (_e.label) {
                case 0:
                    destination = ctx.request.query.destination;
                    _a = destination;
                    switch (_a) {
                        case STRAPI_DESTINATION: return [3, 1];
                        case FIREBASE_DESTINATION: return [3, 3];
                    }
                    return [3, 5];
                case 1:
                    _b = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .deleteStrapiUser(ctx.params.id)];
                case 2:
                    _b.body = _e.sent();
                    return [3, 7];
                case 3:
                    _c = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .deleteFirebaseUser(ctx.params.id)];
                case 4:
                    _c.body = _e.sent();
                    return [3, 7];
                case 5:
                    _d = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .delete(ctx.params.id)];
                case 6:
                    _d.body = _e.sent();
                    return [3, 7];
                case 7: return [2];
            }
        });
    }); },
    deleteMany: function (ctx) { return __awaiter(void 0, void 0, void 0, function () {
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _a = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .deleteMany(ctx.query.ids)];
                case 1:
                    _a.body = _b.sent();
                    return [2];
            }
        });
    }); },
    resetPassword: function (ctx) { return __awaiter(void 0, void 0, void 0, function () {
        var destination, _a, _b, _c, _d;
        return __generator(this, function (_e) {
            switch (_e.label) {
                case 0:
                    destination = ctx.request.query.destination;
                    if (!ctx.request.body.password || ctx.request.body.password.length < 6) {
                        throw new ValidationError("Password maybe empty or less than 6");
                    }
                    _a = destination;
                    switch (_a) {
                        case STRAPI_DESTINATION: return [3, 1];
                        case FIREBASE_DESTINATION: return [3, 3];
                    }
                    return [3, 5];
                case 1:
                    _b = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .resetPasswordStrapiUser(ctx.params.id, {
                            password: ctx.request.body.password,
                        })];
                case 2:
                    _b.body = _e.sent();
                    return [3, 7];
                case 3:
                    _c = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .resetPasswordFirebaseUser(ctx.params.id, {
                            password: ctx.request.body.password,
                        })];
                case 4:
                    _c.body = _e.sent();
                    return [3, 7];
                case 5:
                    _d = ctx;
                    return [4, strapi
                            .plugin("firebase-auth")
                            .service("userService")
                            .resetPassword(ctx.params.id, {
                            password: ctx.request.body.password,
                        })];
                case 6:
                    _d.body = _e.sent();
                    return [3, 7];
                case 7: return [2];
            }
        });
    }); },
};
//# sourceMappingURL=userController.js.map